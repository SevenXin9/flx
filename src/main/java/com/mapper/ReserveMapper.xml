<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.ReserveMapper" >
  <resultMap id="BaseResultMap" type="com.bean.Reserve" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="carid" property="carid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="BaseResultMap_reserve" type="com.VO.ReserveVO" >
    <id column="id" property="reserve.id" jdbcType="INTEGER" />
    <association property="reserve" javaType="com.bean.Reserve">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="carid" property="carid" jdbcType="INTEGER" />
      <result column="userid" property="userid" jdbcType="INTEGER" />
      <result column="time" property="time" jdbcType="TIMESTAMP" />
    </association>
    <association property="car" javaType="com.bean.Car">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="DOUBLE" />
      <result column="releaseTime" property="releasetime" jdbcType="DATE" />
      <result column="brand" property="brand" jdbcType="INTEGER" />
      <result column="type" property="type" jdbcType="INTEGER" />
      <result column="count" property="count" jdbcType="INTEGER" />
    </association>
    <association property="user" javaType="com.bean.User">
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, carid, userid, time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bean.ReserveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reserve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reserve
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reserve
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.ReserveExample" >
    delete from reserve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Reserve" >
    insert into reserve (id, carid, userid, 
      time)
    values (#{id,jdbcType=INTEGER}, #{carid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Reserve" >
    insert into reserve
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="carid != null" >
        carid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        #{carid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.ReserveExample" resultType="java.lang.Integer" >
    select count(*) from reserve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reserve
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.carid != null" >
        carid = #{record.carid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reserve
    set id = #{record.id,jdbcType=INTEGER},
      carid = #{record.carid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Reserve" >
    update reserve
    <set >
      <if test="carid != null" >
        carid = #{carid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Reserve" >
    update reserve
    set carid = #{carid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="reserve_Column_List" >
    select R.id, R.time,U.id, U.email, C.id, C.name, C.price, C.releaseTime, C.brand, C.type, C.count from reserve R,user U,car C
  </sql>

  <select id="selectByAll" resultMap="BaseResultMap_reserve" parameterType="com.VO.ReserveVO">
        <include refid="reserve_Column_List"/>
    <where>
          R.carid = C.id and R.userid = U.id
      <if test="reserve!=null">
        <if test="reserve.time!=null">AND R.time like  '%${reserve.time}%'</if>
      </if>
      <if test="car!=null">
        <if test="car.name!=null">AND C.name like  '%${car.name}%'</if>
      </if>

    </where>
  </select>

</mapper>